var i=Object.defineProperty;var d=(s,e,t)=>e in s?i(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var o=(s,e,t)=>d(s,typeof e!="symbol"?e+"":e,t);class l extends HTMLElement{constructor(){super();const e=document.getElementById("digital-nature-admin-test-event-create-template").content;this.attachShadow({mode:"open"}).appendChild(e.cloneNode(!0));const t=this.shadowRoot.getElementById("klaviyo-event-create-test-submit"),n=this.shadowRoot.getElementById("klaviyo-event-create-test-event-name");t.addEventListener("click",()=>{this.setAttribute("event-name",n.value),this.runTest().then(a=>{})})}async runTest(){let e="Sending data, please wait...",t=document.createElement("digital-nature-loading-overlay");this.shadowRoot.appendChild(t),t.addMessage(e);let n=await window.DigitalNature.utils.request.post("/wp-json/tools-for-klaviyo/v1/events",{event:this.getAttribute("event-name"),"event-data":{send:"success"}});t.deleteMessage(e);let a=document.createElement("digital-nature-dismissable-message");a.setContent("Hoo ha! Your event was sent successfully!","success"),this.shadowRoot.appendChild(a),console.log(n)}}o(l,"observedAttributes",["event-name"]);customElements.define("tools-for-klaviyo-test-event-create",l);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRtaW4uanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2J1aWxkL2Fzc2V0cy9hZG1pbi9qcy93ZWItY29tcG9uZW50cy90ZXN0LWV2ZW50LWNyZWF0ZS1jb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgVGVzdEtsYXZpeW9FdmVudENyZWF0ZSBleHRlbmRzIEhUTUxFbGVtZW50XHJcbntcclxuICAgIC8vIG9ic2VydmVkIGF0dHJpYnV0ZXMgd2lsbCB0cmlnZ2VyIHRoZSBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2tcclxuICAgIHN0YXRpYyBvYnNlcnZlZEF0dHJpYnV0ZXMgPSBbJ2V2ZW50LW5hbWUnXTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG5cclxuICAgICAgICAvLyBnZXQgdGhlIHRlbXBsYXRlIGFuZCBhdHRhY2ggc2hhZG93IGRvbSB3aXRoIHRoYXQgY29udGVudFxyXG4gICAgICAgIGNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RpZ2l0YWwtbmF0dXJlLWFkbWluLXRlc3QtZXZlbnQtY3JlYXRlLXRlbXBsYXRlJykuY29udGVudDtcclxuICAgICAgICB0aGlzLmF0dGFjaFNoYWRvdyh7IG1vZGU6ICdvcGVuJyB9KS5hcHBlbmRDaGlsZCh0ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSkpO1xyXG5cclxuICAgICAgICAvLyBhc3NpZ24gZWxlbWVudHMgdG8gdmFyc1xyXG4gICAgICAgIGNvbnN0IGJ0biA9IHRoaXMuc2hhZG93Um9vdC5nZXRFbGVtZW50QnlJZCgna2xhdml5by1ldmVudC1jcmVhdGUtdGVzdC1zdWJtaXQnKTtcclxuICAgICAgICBjb25zdCBldmVudE5hbWVJbnB1dCA9IHRoaXMuc2hhZG93Um9vdC5nZXRFbGVtZW50QnlJZCgna2xhdml5by1ldmVudC1jcmVhdGUtdGVzdC1ldmVudC1uYW1lJyk7XHJcblxyXG4gICAgICAgIC8vIGFkZCBsaXN0ZW5lcnNcclxuICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdldmVudC1uYW1lJywgZXZlbnROYW1lSW5wdXQudmFsdWUpO1xyXG4gICAgICAgICAgICB0aGlzLnJ1blRlc3QoKS50aGVuKHIgPT4ge30pO1xyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcnVuVGVzdCgpXHJcbiAgICB7XHJcbiAgICAgICAgbGV0IGxvYWRpbmdNZXNzYWdlID0gJ1NlbmRpbmcgZGF0YSwgcGxlYXNlIHdhaXQuLi4nO1xyXG5cclxuICAgICAgICBsZXQgbG9hZGluZ092ZXJsYXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaWdpdGFsLW5hdHVyZS1sb2FkaW5nLW92ZXJsYXknKTtcclxuICAgICAgICB0aGlzLnNoYWRvd1Jvb3QuYXBwZW5kQ2hpbGQobG9hZGluZ092ZXJsYXkpO1xyXG4gICAgICAgIGxvYWRpbmdPdmVybGF5LmFkZE1lc3NhZ2UobG9hZGluZ01lc3NhZ2UpO1xyXG5cclxuICAgICAgICBsZXQgcmVzcG9uc2UgPSBhd2FpdCB3aW5kb3cuRGlnaXRhbE5hdHVyZS51dGlscy5yZXF1ZXN0LnBvc3QoXHJcbiAgICAgICAgICAgIGAvd3AtanNvbi90b29scy1mb3Ita2xhdml5by92MS9ldmVudHNgLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBldmVudDogdGhpcy5nZXRBdHRyaWJ1dGUoJ2V2ZW50LW5hbWUnKSxcclxuICAgICAgICAgICAgICAgIFwiZXZlbnQtZGF0YVwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3NlbmQnOiAnc3VjY2VzcydcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIGxvYWRpbmdPdmVybGF5LmRlbGV0ZU1lc3NhZ2UobG9hZGluZ01lc3NhZ2UpO1xyXG5cclxuICAgICAgICBsZXQgcmVzcG9uc2VNZXNzYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGlnaXRhbC1uYXR1cmUtZGlzbWlzc2FibGUtbWVzc2FnZScpO1xyXG4gICAgICAgIHJlc3BvbnNlTWVzc2FnZS5zZXRDb250ZW50KCdIb28gaGEhIFlvdXIgZXZlbnQgd2FzIHNlbnQgc3VjY2Vzc2Z1bGx5IScsICdzdWNjZXNzJyk7XHJcbiAgICAgICAgdGhpcy5zaGFkb3dSb290LmFwcGVuZENoaWxkKHJlc3BvbnNlTWVzc2FnZSk7XHJcblxyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcclxuICAgIH1cclxufVxyXG5cclxuLy8gYWRkIHRoZSBjdXN0b20gZWxlbWVudCB0byB0aGUgcmVnaXN0cnlcclxuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCd0b29scy1mb3Ita2xhdml5by10ZXN0LWV2ZW50LWNyZWF0ZScsIFRlc3RLbGF2aXlvRXZlbnRDcmVhdGUpOyJdLCJuYW1lcyI6WyJUZXN0S2xhdml5b0V2ZW50Q3JlYXRlIiwidGVtcGxhdGUiLCJidG4iLCJldmVudE5hbWVJbnB1dCIsInIiLCJsb2FkaW5nTWVzc2FnZSIsImxvYWRpbmdPdmVybGF5IiwicmVzcG9uc2UiLCJyZXNwb25zZU1lc3NhZ2UiLCJfX3B1YmxpY0ZpZWxkIl0sIm1hcHBpbmdzIjoib0tBQUEsTUFBTUEsVUFBK0IsV0FDckMsQ0FJSSxhQUFjLENBQ1YsUUFHQSxNQUFNQyxFQUFXLFNBQVMsZUFBZSxpREFBaUQsRUFBRSxRQUM1RixLQUFLLGFBQWEsQ0FBRSxLQUFNLE1BQVEsQ0FBQSxFQUFFLFlBQVlBLEVBQVMsVUFBVSxFQUFJLENBQUMsRUFHeEUsTUFBTUMsRUFBTSxLQUFLLFdBQVcsZUFBZSxrQ0FBa0MsRUFDdkVDLEVBQWlCLEtBQUssV0FBVyxlQUFlLHNDQUFzQyxFQUc1RkQsRUFBSSxpQkFBaUIsUUFBUyxJQUFNLENBQ2hDLEtBQUssYUFBYSxhQUFjQyxFQUFlLEtBQUssRUFDcEQsS0FBSyxRQUFTLEVBQUMsS0FBS0MsR0FBSyxDQUFFLENBQUEsQ0FDdkMsQ0FBUyxDQUNKLENBRUQsTUFBTSxTQUNOLENBQ0ksSUFBSUMsRUFBaUIsK0JBRWpCQyxFQUFpQixTQUFTLGNBQWMsZ0NBQWdDLEVBQzVFLEtBQUssV0FBVyxZQUFZQSxDQUFjLEVBQzFDQSxFQUFlLFdBQVdELENBQWMsRUFFeEMsSUFBSUUsRUFBVyxNQUFNLE9BQU8sY0FBYyxNQUFNLFFBQVEsS0FDcEQsdUNBQ0EsQ0FDSSxNQUFPLEtBQUssYUFBYSxZQUFZLEVBQ3JDLGFBQWMsQ0FDVixLQUFRLFNBQ1gsQ0FDSixDQUNiLEVBRVFELEVBQWUsY0FBY0QsQ0FBYyxFQUUzQyxJQUFJRyxFQUFrQixTQUFTLGNBQWMsb0NBQW9DLEVBQ2pGQSxFQUFnQixXQUFXLDRDQUE2QyxTQUFTLEVBQ2pGLEtBQUssV0FBVyxZQUFZQSxDQUFlLEVBRTNDLFFBQVEsSUFBSUQsQ0FBUSxDQUN2QixDQUNMLENBOUNJRSxFQUhFVCxFQUdLLHFCQUFxQixDQUFDLFlBQVksR0FpRDdDLGVBQWUsT0FBTyxzQ0FBdUNBLENBQXNCIn0=
